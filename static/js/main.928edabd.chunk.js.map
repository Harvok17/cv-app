{"version":3,"sources":["components/Toggle.js","components/Header.js","components/GeneralInfo.js","components/Section.js","components/Experience.js","components/Education.js","components/Skills.js","index.js"],"names":["Toggle","props","label","clickHandler","className","type","onClick","Header","enableDarkMode","enablePreviewMode","children","GeneralInfo","state","name","introduction","link","email","number","editMode","changeHandler","e","setState","target","value","saveOrEdit","preventDefault","this","onSubmit","placeholder","onChange","rows","previewMode","darkMode","displayInfo","Component","Section","items","deleteItem","targetId","closest","id","filter","item","addItem","concat","uniqid","buttons","map","title","displayItems","displayAddBtn","defaultProps","Experience","company","position","dateStart","dateEnd","description","displayExperience","Education","school","course","displaySchool","Skills","skills","displaySkills","App","document","querySelector","querySelectorAll","forEach","btn","click","ReactDom","render"],"mappings":"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","file":"static/js/main.928edabd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Toggle.css\";\n\nconst Toggle = (props) => {\n  const { label, clickHandler } = props;\n\n  return (\n    <div className=\"toggle\">\n      <span className=\"toggle__title\">{label}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onClick={clickHandler} />\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default Toggle;\n","import React from 'react';\nimport '../styles/Header.css';\nimport Toggle from './Toggle';\n\nconst Header = props => {\n  const { enableDarkMode, enablePreviewMode, children } = props;\n  return (\n    <div className=\"header\">\n      <div className=\"header__options\">\n        <Toggle label=\"Dark Mode\" clickHandler={enableDarkMode} />\n        <Toggle label=\"Preview Mode\" clickHandler={enablePreviewMode} />\n      </div>\n\n      {children}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../styles/GeneralInfo.css';\nimport { FaEdit } from 'react-icons/fa';\n\nclass GeneralInfo extends Component {\n  state = {\n    name: 'Your Name',\n    introduction:\n      'I am a [Current Position], currently working at [Current Company]. I help companies build products from zero to one. This is a brief description about you. Write some details about yourself, and make it meaningful. Maximum 3 lines of text.',\n    link: 'your-porfolio.com',\n    email: 'your@email.com',\n    number: '080909999',\n    editMode: false,\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  saveOrEdit = e => {\n    e.preventDefault();\n    this.setState({ editMode: !this.state.editMode });\n  };\n\n  displayInfo() {\n    return this.state.editMode ? (\n      <form onSubmit={this.saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"header__name\"\n          placeholder=\"Enter name\"\n          value={this.state.name}\n          onChange={this.changeHandler}\n        />\n        <br />\n        <textarea\n          name=\"introduction\"\n          rows=\"4\"\n          placeholder=\"Enter your introduction here...\"\n          className=\"header__introduction--text\"\n          value={this.state.introduction}\n          onChange={this.changeHandler}\n        ></textarea>\n        <div className=\"header__contact-details\">\n          <input\n            type=\"text\"\n            name=\"link\"\n            placeholder=\"Enter link\"\n            value={this.state.link}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            value={this.state.email}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"Enter number\"\n            value={this.state.number}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          onClick={this.saveOrEdit}\n          className=\"btn btn--save\"\n        >\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p className=\"header__name\">{this.state.name}</p>\n        <p className=\"header__introduction\">{this.state.introduction}</p>\n        <div className=\"header__contact-details\">\n          <p>{this.state.link}</p>\n          <p>{this.state.email}</p>\n          <p>{this.state.number}</p>\n        </div>\n\n        {this.props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${this.props.darkMode ? 'dark' : ''}`}\n            onClick={this.saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"header__general-info\">{this.displayInfo()}</div>;\n  }\n}\n\nexport default GeneralInfo;\n","import React, { Component } from 'react';\nimport '../styles/Section.css';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport uniqid from 'uniqid';\n\nclass Section extends Component {\n  state = {\n    items: [...this.props.items],\n  };\n\n  static defaultProps = {\n    buttons: true,\n  };\n\n  deleteItem = e => {\n    const targetId = e.target.closest('.section__item').id;\n\n    this.setState({\n      items: this.state.items.filter(item => item !== targetId),\n    });\n  };\n\n  addItem = () => {\n    this.setState({\n      items: this.state.items.concat(uniqid()),\n    });\n  };\n\n  displayItems() {\n    const { buttons, previewMode, darkMode, children } = this.props;\n\n    return this.state.items.map(item => {\n      return (\n        <div key={item} id={item} className=\"section__item\">\n          {buttons && !previewMode ? (\n            <button\n              className={`btn btn--delete ${darkMode ? 'dark' : ''}`}\n              onClick={this.deleteItem}\n            >\n              <FaTrashAlt />\n            </button>\n          ) : null}\n          {children}\n        </div>\n      );\n    });\n  }\n\n  displayAddBtn() {\n    const { buttons, previewMode } = this.props;\n    return buttons && !previewMode ? (\n      <button className=\"btn btn--add\" onClick={this.addItem}>\n        Add\n      </button>\n    ) : null;\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <section className=\"section\">\n        <h3 className=\"section__title\">{title}</h3>\n        {this.displayItems()}\n        {this.displayAddBtn()}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nclass Experience extends Component {\n  state = {\n    company: 'Company',\n    position: 'Position',\n    dateStart: '[Month] [Year]',\n    dateEnd: '[Month] [Year]',\n    description:\n      'Some stuff about the work that you’ve done here. It would be good if you can include responsibilities and achievements, as well as the extra miles that you have done. Don’t make it too long, keep it short but meaningful. Maximum 10 lines?',\n    editMode: false,\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  saveOrEdit = e => {\n    e.preventDefault();\n    this.setState({ editMode: !this.state.editMode });\n  };\n\n  displayExperience() {\n    return this.state.editMode ? (\n      <form onSubmit={this.saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"company\"\n          className=\"primary\"\n          placeholder=\"Enter Company\"\n          value={this.state.company}\n          onChange={this.changeHandler}\n        />{' '}\n        •{' '}\n        <input\n          type=\"text\"\n          name=\"position\"\n          className=\"secondary\"\n          placeholder=\"Enter Position\"\n          value={this.state.position}\n          onChange={this.changeHandler}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"dateStart\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={this.state.dateStart}\n          onChange={this.changeHandler}\n        />{' '}\n        -{' '}\n        <input\n          type=\"text\"\n          name=\"dateEnd\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={this.state.dateEnd}\n          onChange={this.changeHandler}\n        />\n        <br />\n        <textarea\n          name=\"description\"\n          rows=\"4\"\n          placeholder=\"Some stuff about the work that you’ve done here.\"\n          value={this.state.description}\n          onChange={this.changeHandler}\n        ></textarea>\n        <button className=\"btn btn--save\" onClick={this.saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p>\n          <span className=\"primary\">{this.state.company}</span> •{' '}\n          <span className=\"secondary\">{this.state.position}</span>\n        </p>\n        <p className=\"date\">\n          {this.state.dateStart} - {this.state.dateEnd}\n        </p>\n        <p className=\"description\">{this.state.description}</p>\n        {this.props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${this.props.darkMode ? 'dark' : ''}`}\n            onClick={this.saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return <div className=\"section__info\">{this.displayExperience()}</div>;\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nclass Education extends Component {\n  state = {\n    school: 'School',\n    course: 'Course',\n    dateStart: '[Month] [Year]',\n    dateEnd: '[Month] [Year]',\n    editMode: false,\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  saveOrEdit = e => {\n    e.preventDefault();\n    this.setState({ editMode: !this.state.editMode });\n  };\n\n  displaySchool() {\n    return this.state.editMode ? (\n      <form onSubmit={this.saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"school\"\n          className=\"primary\"\n          placeholder=\"Enter School\"\n          value={this.state.school}\n          onChange={this.changeHandler}\n        />{' '}\n        •{' '}\n        <input\n          type=\"text\"\n          name=\"course\"\n          className=\"secondary\"\n          placeholder=\"Enter Course\"\n          value={this.state.course}\n          onChange={this.changeHandler}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"dateStart\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={this.state.dateStart}\n          onChange={this.changeHandler}\n        />{' '}\n        -{' '}\n        <input\n          type=\"text\"\n          name=\"dateEnd\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={this.state.dateEnd}\n          onChange={this.changeHandler}\n        />\n        <button className=\"btn btn--save\" onClick={this.saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p>\n          <span className=\"primary\">{this.state.school}</span> •{' '}\n          <span className=\"secondary\">{this.state.course}</span>\n        </p>\n        <p className=\"date\">\n          {this.state.dateStart} - {this.state.dateEnd}\n        </p>\n\n        {this.props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${this.props.darkMode ? 'dark' : ''}`}\n            onClick={this.saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.displaySchool()}</div>;\n  }\n}\n\nexport default Education;\n","import React, { Component } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nclass Skills extends Component {\n  state = {\n    skills: 'HTML - CSS - JavaScript - Figma - ReactJS - Webpack',\n    editMode: false,\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  saveOrEdit = e => {\n    e.preventDefault();\n    this.setState({ editMode: !this.state.editMode });\n  };\n\n  displaySkills() {\n    return this.state.editMode ? (\n      <form onSubmit={this.saveOrEdit}>\n        <textarea\n          name=\"skills\"\n          rows=\"4\"\n          placeholder=\"Enter your skills here\"\n          className=\"primary skills-text\"\n          value={this.state.skills}\n          onChange={this.changeHandler}\n        ></textarea>\n        <button className=\"btn btn--save\" onClick={this.saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p className=\"primary\">{this.state.skills}</p>\n        {this.props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${this.props.darkMode ? 'dark' : ''}`}\n            onClick={this.saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.displaySkills()}</div>;\n  }\n}\n\nexport default Skills;\n","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport './styles/index.css';\nimport uniqid from 'uniqid';\nimport Header from './components/Header';\nimport GeneralInfo from './components/GeneralInfo';\nimport Section from './components/Section';\nimport Experience from './components/Experience';\nimport Education from './components/Education';\nimport Skills from './components/Skills';\n\nclass App extends Component {\n  state = {\n    darkMode: false,\n    previewMode: false,\n  };\n\n  enableDarkMode = () => {\n    this.setState({\n      darkMode: !this.state.darkMode,\n    });\n  };\n\n  enablePreviewMode = () => {\n    if (!document.querySelector('.btn--save')) {\n      this.setState({\n        previewMode: !this.state.previewMode,\n      });\n      return;\n    }\n\n    document.querySelectorAll('.btn--save').forEach(btn => btn.click());\n\n    this.setState({\n      previewMode: !this.state.previewMode,\n    });\n  };\n\n  render() {\n    return (\n      <div className={`container ${this.state.darkMode ? 'dark' : ''}`}>\n        <Header\n          enableDarkMode={this.enableDarkMode}\n          enablePreviewMode={this.enablePreviewMode}\n        >\n          <GeneralInfo\n            previewMode={this.state.previewMode}\n            darkMode={this.state.darkMode}\n          />\n        </Header>\n        <Section\n          items={[uniqid(), uniqid(), uniqid()]}\n          title=\"Experience\"\n          previewMode={this.state.previewMode}\n          darkMode={this.state.darkMode}\n        >\n          <Experience\n            previewMode={this.state.previewMode}\n            darkMode={this.state.darkMode}\n          />\n        </Section>\n        <Section\n          items={[uniqid(), uniqid()]}\n          title=\"Education\"\n          previewMode={this.state.previewMode}\n          darkMode={this.state.darkMode}\n        >\n          <Education\n            previewMode={this.state.previewMode}\n            darkMode={this.state.darkMode}\n          />\n        </Section>\n        <Section\n          items={[uniqid()]}\n          title=\"Skills\"\n          previewMode={this.state.previewMode}\n          darkMode={this.state.darkMode}\n          buttons={false}\n        >\n          <Skills\n            previewMode={this.state.previewMode}\n            darkMode={this.state.darkMode}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}