{"version":3,"sources":["components/Toggle.js","components/Header.js","components/GeneralInfo.js","components/Section.js","components/Experience.js","components/Education.js","components/Skills.js","index.js"],"names":["Toggle","props","label","clickHandler","className","type","onClick","Header","enableDarkMode","enablePreviewMode","children","GeneralInfo","useState","name","setName","introduction","setIntro","link","setLink","email","setEmail","number","setNumber","editMode","setEditMode","saveOrEdit","e","preventDefault","onSubmit","placeholder","value","onChange","target","rows","previewMode","darkMode","Section","items","setItems","useEffect","i","addItem","deleteItem","targetId","closest","id","filter","item","prevItems","concat","uniqid","title","buttons","map","displayItems","displayAddBtn","defaultProps","Experience","company","setCompany","position","setPosition","dateStart","setDateStart","dateEnd","setDateEnd","description","setDescription","Education","school","course","form","setState","changeHandler","Skills","skills","setSkills","App","setDark","setPreview","document","querySelector","querySelectorAll","forEach","btn","click","ReactDom","render"],"mappings":"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","file":"static/js/main.4d5e2849.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Toggle.css\";\n\nconst Toggle = (props) => {\n  const { label, clickHandler } = props;\n\n  return (\n    <div className=\"toggle\">\n      <span className=\"toggle__title\">{label}</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" onClick={clickHandler} />\n        <span className=\"slider\"></span>\n      </label>\n    </div>\n  );\n};\n\nexport default Toggle;\n","import React from 'react';\nimport '../styles/Header.css';\nimport Toggle from './Toggle';\n\nconst Header = props => {\n  const { enableDarkMode, enablePreviewMode, children } = props;\n  return (\n    <div className=\"header\">\n      <div className=\"header__options\">\n        <Toggle label=\"Dark Mode\" clickHandler={enableDarkMode} />\n        <Toggle label=\"Preview Mode\" clickHandler={enablePreviewMode} />\n      </div>\n\n      {children}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport '../styles/GeneralInfo.css';\nimport { FaEdit } from 'react-icons/fa';\n\nconst GeneralInfo = props => {\n  const [name, setName] = useState('Your Name');\n  const [introduction, setIntro] = useState(\n    'I am a [Current Position], currently working at [Current Company]. I help companies build products from zero to one. This is a brief description about you. Write some details about yourself, and make it meaningful. Maximum 3 lines of text.'\n  );\n  const [link, setLink] = useState('your-porfolio.com');\n  const [email, setEmail] = useState('your@email.com');\n  const [number, setNumber] = useState('080909999');\n  const [editMode, setEditMode] = useState(false);\n\n  const saveOrEdit = e => {\n    e.preventDefault();\n    setEditMode(!editMode);\n  };\n\n  const displayInfo = () => {\n    return editMode ? (\n      <form onSubmit={saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          className=\"header__name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n        <br />\n        <textarea\n          name=\"introduction\"\n          rows=\"4\"\n          placeholder=\"Enter your introduction here...\"\n          className=\"header__introduction--text\"\n          value={introduction}\n          onChange={e => setIntro(e.target.value)}\n        ></textarea>\n        <div className=\"header__contact-details\">\n          <input\n            type=\"text\"\n            name=\"link\"\n            placeholder=\"Enter link\"\n            value={link}\n            onChange={e => setLink(e.target.value)}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            name=\"number\"\n            placeholder=\"Enter number\"\n            value={number}\n            onChange={e => setNumber(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\" onClick={saveOrEdit} className=\"btn btn--save\">\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p className=\"header__name\">{name}</p>\n        <p className=\"header__introduction\">{introduction}</p>\n        <div className=\"header__contact-details\">\n          <p>{link}</p>\n          <p>{email}</p>\n          <p>{number}</p>\n        </div>\n\n        {props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${props.darkMode ? 'dark' : ''}`}\n            onClick={saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return <div className=\"header__general-info\">{displayInfo()}</div>;\n};\n\nexport default GeneralInfo;\n","import React, { useState, useEffect } from 'react';\nimport '../styles/Section.css';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport uniqid from 'uniqid';\n\nconst Section = props => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    for (let i = 0; i < props.items; i++) {\n      addItem();\n    }\n  }, [props.items]);\n\n  const deleteItem = e => {\n    const targetId = e.target.closest('.section__item').id;\n\n    setItems(items.filter(item => item !== targetId));\n  };\n\n  const addItem = () => {\n    setItems(prevItems => prevItems.concat(uniqid()));\n  };\n\n  const displayItems = () => {\n    const { buttons, previewMode, darkMode, children } = props;\n\n    return items.map(item => {\n      return (\n        <div key={item} id={item} className=\"section__item\">\n          {buttons && !previewMode ? (\n            <button\n              className={`btn btn--delete ${darkMode ? 'dark' : ''}`}\n              onClick={deleteItem}\n            >\n              <FaTrashAlt />\n            </button>\n          ) : null}\n          {children}\n        </div>\n      );\n    });\n  };\n\n  const displayAddBtn = () => {\n    const { buttons, previewMode } = props;\n    return buttons && !previewMode ? (\n      <button className=\"btn btn--add\" onClick={addItem}>\n        Add\n      </button>\n    ) : null;\n  };\n\n  const { title } = props;\n  return (\n    <section className=\"section\">\n      <h3 className=\"section__title\">{title}</h3>\n      {displayItems()}\n      {displayAddBtn()}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.defaultProps = {\n  buttons: true,\n};\n","import React, { useState } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nconst Experience = props => {\n  const [company, setCompany] = useState('Company');\n  const [position, setPosition] = useState('Position');\n  const [dateStart, setDateStart] = useState('[Month] [Year]');\n  const [dateEnd, setDateEnd] = useState('[Month] [Year]');\n  const [description, setDescription] = useState(\n    'Some stuff about the work that you’ve done here. It would be good if you can include responsibilities and achievements, as well as the extra miles that you have done. Don’t make it too long, keep it short but meaningful. Maximum 10 lines?'\n  );\n  const [editMode, setEditMode] = useState(false);\n\n  const saveOrEdit = e => {\n    e.preventDefault();\n    setEditMode(!editMode);\n  };\n\n  const displayExperience = () => {\n    return editMode ? (\n      <form onSubmit={saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"company\"\n          className=\"primary\"\n          placeholder=\"Enter Company\"\n          value={company}\n          onChange={e => setCompany(e.target.value)}\n        />{' '}\n        •{' '}\n        <input\n          type=\"text\"\n          name=\"position\"\n          className=\"secondary\"\n          placeholder=\"Enter Position\"\n          value={position}\n          onChange={e => setPosition(e.target.value)}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"dateStart\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={dateStart}\n          onChange={e => setDateStart(e.target.value)}\n        />{' '}\n        -{' '}\n        <input\n          type=\"text\"\n          name=\"dateEnd\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={dateEnd}\n          onChange={e => setDateEnd(e.target.value)}\n        />\n        <br />\n        <textarea\n          name=\"description\"\n          rows=\"4\"\n          placeholder=\"Some stuff about the work that you’ve done here.\"\n          value={description}\n          onChange={e => setDescription(e.target.value)}\n        ></textarea>\n        <button className=\"btn btn--save\" onClick={saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p>\n          <span className=\"primary\">{company}</span> •{' '}\n          <span className=\"secondary\">{position}</span>\n        </p>\n        <p className=\"date\">\n          {dateStart} - {dateEnd}\n        </p>\n        <p className=\"description\">{description}</p>\n        {props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${props.darkMode ? 'dark' : ''}`}\n            onClick={saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return <div className=\"section__info\">{displayExperience()}</div>;\n};\n\nexport default Experience;\n","import React, { useState } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nconst Education = props => {\n  const [form, setState] = useState({\n    school: 'School',\n    course: 'Course',\n    dateStart: '[Month] [Year]',\n    dateEnd: '[Month] [Year]',\n  });\n\n  const [editMode, setEditMode] = useState(false);\n\n  const changeHandler = e => {\n    setState({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const saveOrEdit = e => {\n    e.preventDefault();\n    setEditMode(!editMode);\n  };\n\n  const displaySchool = () => {\n    return editMode ? (\n      <form onSubmit={saveOrEdit}>\n        <input\n          type=\"text\"\n          name=\"school\"\n          className=\"primary\"\n          placeholder=\"Enter School\"\n          value={form.school}\n          onChange={changeHandler}\n        />{' '}\n        •{' '}\n        <input\n          type=\"text\"\n          name=\"course\"\n          className=\"secondary\"\n          placeholder=\"Enter Course\"\n          value={form.course}\n          onChange={changeHandler}\n        />\n        <br />\n        <input\n          type=\"text\"\n          name=\"dateStart\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={form.dateStart}\n          onChange={changeHandler}\n        />{' '}\n        -{' '}\n        <input\n          type=\"text\"\n          name=\"dateEnd\"\n          className=\"date\"\n          placeholder=\"[Month] [Year]\"\n          value={form.dateEnd}\n          onChange={changeHandler}\n        />\n        <button className=\"btn btn--save\" onClick={saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p>\n          <span className=\"primary\">{form.school}</span> •{' '}\n          <span className=\"secondary\">{form.course}</span>\n        </p>\n        <p className=\"date\">\n          {form.dateStart} - {form.dateEnd}\n        </p>\n\n        {props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${props.darkMode ? 'dark' : ''}`}\n            onClick={saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return <div>{displaySchool()}</div>;\n};\n\nexport default Education;\n","import React, { useState } from 'react';\nimport { FaEdit } from 'react-icons/fa';\n\nconst Skills = props => {\n  const [skills, setSkills] = useState(\n    'HTML - CSS - JavaScript - Figma - ReactJS - Webpack'\n  );\n  const [editMode, setEditMode] = useState(false);\n\n  const changeHandler = e => {\n    setSkills(e.target.value);\n  };\n\n  const saveOrEdit = e => {\n    e.preventDefault();\n    setEditMode(!editMode);\n  };\n\n  const displaySkills = () => {\n    return editMode ? (\n      <form onSubmit={saveOrEdit}>\n        <textarea\n          name=\"skills\"\n          rows=\"4\"\n          placeholder=\"Enter your skills here\"\n          className=\"primary skills-text\"\n          value={skills}\n          onChange={changeHandler}\n        ></textarea>\n        <button className=\"btn btn--save\" onClick={saveOrEdit}>\n          Save\n        </button>\n      </form>\n    ) : (\n      <div>\n        <p className=\"primary\">{skills}</p>\n        {props.previewMode ? null : (\n          <button\n            className={`btn btn--edit ${props.darkMode ? 'dark' : ''}`}\n            onClick={saveOrEdit}\n          >\n            <FaEdit />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  return <div>{displaySkills()}</div>;\n};\n\nexport default Skills;\n","import React, { useState } from 'react';\nimport ReactDom from 'react-dom';\nimport './styles/index.css';\nimport Header from './components/Header';\nimport GeneralInfo from './components/GeneralInfo';\nimport Section from './components/Section';\nimport Experience from './components/Experience';\nimport Education from './components/Education';\nimport Skills from './components/Skills';\n\nconst App = () => {\n  const [darkMode, setDark] = useState(false);\n  const [previewMode, setPreview] = useState(false);\n\n  const enableDarkMode = () => {\n    setDark(!darkMode);\n  };\n\n  const enablePreviewMode = () => {\n    if (!document.querySelector('.btn--save')) {\n      setPreview(!previewMode);\n      return;\n    }\n\n    document.querySelectorAll('.btn--save').forEach(btn => btn.click());\n\n    setPreview(!previewMode);\n  };\n\n  return (\n    <div className={`container ${darkMode ? 'dark' : ''}`}>\n      <Header\n        enableDarkMode={enableDarkMode}\n        enablePreviewMode={enablePreviewMode}\n      >\n        <GeneralInfo previewMode={previewMode} darkMode={darkMode} />\n      </Header>\n      <Section\n        items={3}\n        title=\"Experience\"\n        previewMode={previewMode}\n        darkMode={darkMode}\n      >\n        <Experience previewMode={previewMode} darkMode={darkMode} />\n      </Section>\n      <Section\n        items={2}\n        title=\"Education\"\n        previewMode={previewMode}\n        darkMode={darkMode}\n      >\n        <Education previewMode={previewMode} darkMode={darkMode} />\n      </Section>\n      <Section\n        items={1}\n        title=\"Skills\"\n        previewMode={previewMode}\n        darkMode={darkMode}\n        buttons={false}\n      >\n        <Skills previewMode={previewMode} darkMode={darkMode} />\n      </Section>\n    </div>\n  );\n};\n\nReactDom.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}